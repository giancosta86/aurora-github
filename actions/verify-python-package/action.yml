name: Verify Python package
description: Verifies the source files of a Python package using PDM.

inputs:
  pdm-version:
    description: Version of PDM that should be used.

  crash-on-critical-todos:
    description: Crash the workflow if critical TODOs are found.
    default: true

  source-file-regex:
    description: PCRE pattern describing the source files.
    default: '^\.\/(src|tests)\/.+\.pyw?$'

  enforce-branch-version:
    description: How the branch version should be enforced.
    default: inject

  project-directory:
    description: The directory containing pyproject.toml.
    default: .

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ -z "${{ inputs.crash-on-critical-todos }}" ]]
        then
          echo "❌Missing action input: 'crash-on-critical-todos'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.source-file-regex }}" ]]
        then
          echo "❌Missing action input: 'source-file-regex'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.enforce-branch-version }}" ]]
        then
          echo "❌Missing action input: 'enforce-branch-version'!" >&2
          exit 1
        fi

    - name: Enforce branch version
      uses: giancosta86/aurora-github/actions/enforce-branch-version@v9.0.0
      with:
        mode: ${{ inputs.enforce-branch-version }}
        project-directory: ${{ inputs.project-directory }}

    - name: Ensure pdm
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        source "${{ github.action_path }}/../../core/bash/pdm.sh"

        ensurePdm

    - name: Verify the project
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        echo "🔬Verifying the project..."
        pdm run verify
        echo "✅Project verified!"

    - name: Build the project
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        echo "📦Building the project..."
        pdm build
        echo "✅Project built successfully!"

    - name: Check for critical TODOs
      uses: giancosta86/aurora-github/actions/find-critical-todos@v9.0.0
      with:
        source-file-regex: ${{ inputs.source-file-regex }}
        crash-on-found: ${{ inputs.crash-on-critical-todos }}
        display-lines: true
        root-directory: ${{ inputs.project-directory }}

    - name: Print confirmation message
      shell: bash
      run: echo "✅Python project verified!"

name: Publish npm package
description: Publishes a NodeJS package to an npm registry.

inputs:
  dry-run:
    description: Run a simulated publication via --dry-run.
    default: false

  npm-token:
    description: The secret token for publishing to the registry.

  website-directory:
    description: Relative directory containing the project website.
    default: website

  enforce-branch-version:
    description: The "mode" parameter for "enforce-branch-version".
    default: inject

  project-directory:
    description: The directory containing package.json.
    default: .

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ -z "${{ inputs.dry-run }}" ]]
        then
          echo "❌Missing action input: 'dry-run'!" >&2
          exit 1
        fi

        if [[ ${{ inputs.dry-run }} != 'true' && -z "${{ inputs.npm-token }}" ]]
        then
          echo "❌Missing action input: 'npm-token'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.website-directory }}" ]]
        then
          echo "❌Missing action input: 'website-directory'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.enforce-branch-version }}" ]]
        then
          echo "❌Missing action input: 'enforce-branch-version'!" >&2
          exit 1
        fi

        if [[ ! -f "package.json" ]]
        then
          echo "❌The package.json descriptor file does not exist!!" >&2
          exit 1
        fi

    - name: Enforce branch version
      uses: giancosta86/aurora-github/actions/enforce-branch-version@v7.0.0
      with:
        mode: ${{ inputs.enforce-branch-version }}
        project-directory: ${{ inputs.project-directory }}

    - name: Setup NodeJS context
      uses: giancosta86/aurora-github/actions/setup-nodejs-context@v7.0.0
      with:
        project-directory: ${{ inputs.project-directory }}

    - name: Try to build the package artifacts
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        if jq -e '.scripts.build? != null' package.json > /dev/null
        then
          echo "✅'build' script found in package.json - now running it!"
          pnpm build
        else
          echo "💭No 'build' script found in package.json - skipping the build step."
        fi

    - name: Publish the GitHub Pages website
      uses: giancosta86/aurora-github/actions/publish-github-pages@v7.0.0
      with:
        optional: true
        source-directory: ${{ inputs.project-directory }}/${{ inputs.website-directory }}
        dry-run: ${{ inputs.dry-run }}
        enforce-branch-version: ${{ inputs.enforce-branch-version }}

    - name: Display the artifact descriptor
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        echo "The content of your 📦package.json just before publication is:"
        jq -C . package.json
        echo "📦📦📦"

    - name: Publish to the registry
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ "${{ inputs.dry-run }}" == "true" ]]
        then
          pnpm publish --no-git-checks --access public --dry-run
        else
          pnpm publish --no-git-checks --access public
        fi
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}

    - name: Print confirmation message
      shell: bash
      run: echo "✅Npm package published successfully!"

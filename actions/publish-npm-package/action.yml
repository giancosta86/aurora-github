name: Publish npm package
description: Publishes a NodeJS package to an npm registry.

inputs:
  dry-run:
    description: Run a simulated publication via --dry-run.
    default: false

  npm-token:
    description: The secret token for publishing to the registry.

  registry-url:
    description: The URL of the npm registry.
    default: https://registry.npmjs.org

  frozen-lockfile:
    description: Fail if 'pnpm-lock.yaml' is missing or outdated.
    default: true

  project-directory:
    description: The directory containing package.json.
    default: .

  shell:
    description: The shell used to run commands.
    default: bash

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ -z "${{ inputs.dry-run }}" ]]
        then
          echo "❌Missing action input: 'dry-run'!" >&2
          exit 1
        fi

        if [[ ${{ inputs.dry-run }} != 'true' && -z "${{ inputs.npm-token }}" ]]
        then
          echo "❌Missing action input: 'npm-token'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.registry-url }}" ]]
        then
          echo "❌Missing action input: 'registry-url'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.frozen-lockfile }}" ]]
        then
          echo "❌Missing action input: 'frozen-lockfile'!" >&2
          exit 1
        fi

        if [[ ! -f "package.json" ]]
        then
          echo "❌The package.json descriptor file does not exist!!" >&2
          exit 1
        fi

    - name: Display the artifact descriptor
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}
      run: |
        echo "The content of your 📦package.json just before publication is:"
        jq . package.json

    - name: Setup NodeJS context
      uses: giancosta86/aurora-github/actions/setup-nodejs-context@v4.0.0
      with:
        registry-url: ${{ inputs.registry-url }}
        frozen-lockfile: ${{ inputs.frozen-lockfile }}
        project-directory: ${{ inputs.project-directory }}
        shell: ${{ inputs.shell }}

    - name: Publish to npm
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ "${{ inputs.dry-run }}" == "true" ]]
        then
          pnpm publish --no-git-checks --access public --dry-run
        else
          pnpm publish --no-git-checks --access public
        fi
      env:
        NODE_AUTH_TOKEN: ${{ inputs.npm-token }}

    - name: Print confirmation message
      shell: ${{ inputs.shell }}
      run: |
        echo "✅Publication to '${{ inputs.registry-url }}' successful!"

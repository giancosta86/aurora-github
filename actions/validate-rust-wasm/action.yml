name: Validate Rust web assembly
description: Validates the source files of a Rust web assembly.

inputs:
  client-tests-directory:
    description: Relative directory containing the NodeJS-based client tests.
    required: false
    default: client-tests

  check-artifact-version:
    description: Ensures the version in Cargo.toml matches the branch name.
    required: false
    default: true

  project-directory:
    description: The directory containing Cargo.toml.
    required: false
    default: .

  shell:
    description: The shell used to run commands
    required: false
    default: bash

runs:
  using: composite
  steps:
    - name: Install wasm-pack
      uses: giancosta86/aurora-github/install-wasm-pack
      with:
        shell: ${{ inputs.shell }}

    - name: Validate Rust source files
      uses: giancosta86/aurora-github/validate-rust-crate
      with:
        check-artifact-version: ${{ inputs.check-artifact-version }}
        project-directory: ${{ inputs.project-directory }}
        shell: ${{ inputs.shell }}

    - name: Run headless browser tests
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}
      run: wasm-pack test --chrome --headless --release

    - name: Ensure test client directory exists
      if: ${{ inputs.client-tests-directory != '' }}
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}
      run: |
        client_tests_directory="${{ inputs.client-tests-directory }}"

        if [[ ! -d "$client_tests_directory" ]]
        then
          echo "The client test directory '$client_tests_directory' does not exist"
          exit 1
        fi

    - name: Set up NodeJS
      if: ${{ inputs.client-tests-directory != '' }}
      uses: actions/setup-node@v4
      with:
        node-version-file: ${{ inputs.project-directory }}/${{ inputs.client-tests-directory }}/.nvmrc

    - name: Install client-side test dependencies
      if: ${{ inputs.client-tests-directory != '' }}
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}/${{ inputs.client-tests-directory }}
      run: pnpm install --frozen-lockfile

    - name: Perform client-side tests
      if: ${{ inputs.client-tests-directory != '' }}
      shell: ${{ inputs.shell }}
      working-directory: ${{ inputs.project-directory }}/${{ inputs.client-tests-directory }}
      run: pnpm test

name: Find critical TODOs
description: Looks for "critical TODOs" - that is, instances of the "TODO!" string - in source files.

inputs:
  source-file-regex:
    description: The PCRE pattern of source file names, for the "find" command.

  crash-on-found:
    description: If true, exits with error when critical TODOs are found.
    default: true

  display-lines:
    description: Display the lines with critical TODOs.
    default: true

  verbose:
    description: Show details such as the filterable paths.
    default: false

  root-directory:
    description: The root of the directory tree.
    default: .

outputs:
  found:
    description: true if at least one TODO! was found in some file, false otherwise.
    value: ${{ steps.main.outputs.found }}

runs:
  using: composite
  steps:
    - uses: giancosta86/aurora-github/actions/setup-elvish-context@v10.3.0

    - id: main
      shell: elvish {0}
      working-directory: ${{ inputs.root-directory }}
      run: |
        use aurora-github/core
        use aurora-github/critical-todos

        critical-todos:find [
          &source-file-regex=(core:require-input source-file-regex '${{ inputs.source-file-regex }}')
          &crash-on-found=(core:require-input crash-on-found '${{ inputs.crash-on-found }}')
          &display-lines=(core:require-input display-lines '${{ inputs.display-lines }}')
          &verbose=(core:require-input verbose '${{ inputs.verbose }}')
        ]

name: Publish Rust crate
description: Publishes a Rust crate - by default, to crates.io - with all of its features enabled.

inputs:
  dry-run:
    description: Run a simulated publication via --dry-run.
    default: false

  cargo-token:
    description: The secret token for publishing to the registry.

  document-all-features:
    description: Enable Rustdoc for all features.
    default: true

  website-directory:
    description: Relative directory containing the project website.
    default: website

  enforce-branch-version:
    description: How the branch version should be enforced.
    default: inject

  project-directory:
    description: The directory containing Cargo.toml.
    default: .

runs:
  using: composite
  steps:
    - name: Validate inputs
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        if [[ -z "${{ inputs.dry-run }}" ]]
        then
          echo "❌Missing action input: 'dry-run'!" >&2
          exit 1
        fi

        if [[ ${{ inputs.dry-run }} != 'true' && -z "${{ inputs.cargo-token }}" ]]
        then
          echo "❌Missing action input: 'cargo-token'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.document-all-features }}" ]]
        then
          echo "❌Missing action input: 'document-all-features'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.website-directory }}" ]]
        then
          echo "❌Missing action input: 'website-directory'!" >&2
          exit 1
        fi

        if [[ -z "${{ inputs.enforce-branch-version }}" ]]
        then
          echo "❌Missing action input: 'enforce-branch-version'!" >&2
          exit 1
        fi

    - name: Enforce branch version
      uses: giancosta86/aurora-github/actions/enforce-branch-version@v7.0.1
      with:
        mode: ${{ inputs.enforce-branch-version }}
        project-directory: ${{ inputs.project-directory }}

    - name: Enable Rustdoc for all features
      if: ${{ inputs.document-all-features == 'true' }}
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        cat << EOF >> Cargo.toml

        [package.metadata.docs.rs]
        all-features = true
        EOF

    - name: Publish the GitHub Pages website
      uses: giancosta86/aurora-github/actions/publish-github-pages@v7.0.1
      with:
        optional: true
        source-directory: ${{ inputs.project-directory }}/${{ inputs.website-directory }}
        dry-run: ${{ inputs.dry-run }}
        enforce-branch-version: ${{ inputs.enforce-branch-version }}

    - name: Display the artifact descriptor
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        echo "The content of your 🦀Cargo.toml just before publication is:"
        cat Cargo.toml
        echo "🦀🦀🦀"

    - name: Publish the crate
      shell: bash
      working-directory: ${{ inputs.project-directory }}
      run: |
        dryRun="${{ inputs.dry-run }}"

        if [[ "$dryRun" == "true" ]]
        then
          cargo publish --all-features --allow-dirty --dry-run
        else
          cargo publish --all-features --allow-dirty
        fi
      env:
        CARGO_REGISTRY_TOKEN: ${{ inputs.cargo-token }}

    - name: Print confirmation message
      shell: bash
      run: echo "✅The 🦀Rust crate was published successfully!"

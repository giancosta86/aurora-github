name: Test detect-project-tech

runs:
  using: composite
  steps:
    - uses: ./actions/detect-project-tech
      id: detect-rust-crate
      with:
        project-directory: ./tests/rust-crate

    - name: Tech for Rust crate should be detected
      shell: bash
      run: |
        tech="${{ steps.detect-rust-crate.outputs.project-tech }}"

        echo "🔎Technology retrieved for 🦀Rust: '$tech'"
        if [[ "$tech" != "rust" ]] 
        then
          echo "❌Incorrect project tech!" >&2
          exit 1
        fi

    - name: Artifact descriptor for Rust crate should be detected
      shell: bash
      run: |
        artifactDescriptor="${{ steps.detect-rust-crate.outputs.artifact-descriptor }}"

        echo "🔎Artifact descriptor retrieved for 🦀Rust: '$artifactDescriptor'"
        if [[ "$artifactDescriptor" != "Cargo.toml" ]] 
        then
          echo "❌Incorrect artifact descriptor!" >&2
          exit 1
        fi

    - uses: ./actions/detect-project-tech
      id: detect-rust-wasm
      with:
        project-directory: ./tests/rust-wasm

    - name: Tech for Rust web assembly should be detected
      shell: bash
      run: |
        tech="${{ steps.detect-rust-wasm.outputs.project-tech }}"

        echo "🔎Technology retrieved for 🦀Rust 🌐web assembly: '$tech'"
        if [[ "$tech" != "rust" ]] 
        then
          echo "❌Incorrect project tech!" >&2
          exit 1
        fi

    - name: Artifact descriptor for Rust web assembly should be detected
      shell: bash
      run: |
        artifactDescriptor="${{ steps.detect-rust-wasm.outputs.artifact-descriptor }}"

        echo "🔎Artifact descriptor retrieved for 🦀Rust 🌐web assembly: '$artifactDescriptor'"
        if [[ "$artifactDescriptor" != "Cargo.toml" ]] 
        then
          echo "❌Incorrect artifact descriptor!" >&2
          exit 1
        fi

    - uses: ./actions/detect-project-tech
      id: detect-nodejs-package
      with:
        project-directory: ./tests/npm-package

    - name: Tech for NodeJS package should be detected
      shell: bash
      run: |
        tech="${{ steps.detect-nodejs-package.outputs.project-tech }}"

        echo "🔎Technology retrieved for 📦NodeJS: '$tech'"
        if [[ "$tech" != "nodejs" ]] 
        then
          echo "❌Incorrect project tech!" >&2
          exit 1
        fi

    - name: Artifact descriptor for NodeJS package should be detected
      shell: bash
      run: |
        artifactDescriptor="${{ steps.detect-nodejs-package.outputs.artifact-descriptor }}"

        echo "🔎Artifact descriptor retrieved for 📦NodeJS: '$artifactDescriptor'"
        if [[ "$artifactDescriptor" != "package.json" ]] 
        then
          echo "❌Incorrect artifact descriptor!" >&2
          exit 1
        fi

    - uses: ./actions/detect-project-tech
      id: detect-unknown-tech
      with:
        project-directory: ./tests/unknown-tech

    - name: Tech for unknown technology should be an empty string
      shell: bash
      run: |
        tech="${{ steps.detect-unknown-tech.outputs.project-tech }}"

        echo "🔎Technology retrieved for 🎁unknown stack: '$tech'"
        if [[ ! -z "$tech" ]] 
        then
          echo "❌Incorrect project tech!" >&2
          exit 1
        fi

    - name: Artifact descriptor for unknown technology should be an empty string
      shell: bash
      run: |
        artifactDescriptor="${{ steps.detect-unknown-tech.outputs.artifact-descriptor }}"

        echo "🔎Artifact descriptor retrieved for 🎁unknown stack: '$artifactDescriptor'"
        if [[ ! -z "$artifactDescriptor" ]] 
        then
          echo "❌Incorrect artifact descriptor!" >&2
          exit 1
        fi

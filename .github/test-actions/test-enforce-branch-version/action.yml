name: Test enforce-branch-version

runs:
  using: composite
  steps:
    - shell: bash
      run: echo "🎭Testing 'skip' mode..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: skip
        project-directory: tests/rust-crate

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 📦NodeJS package..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/npm-package

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🦀Rust crate..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/rust-crate

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🦀Rust 🌐WebAssembly..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/rust-wasm

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🪶Maven project..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/maven-project

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🐘Gradle project..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/gradle-project

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🐍Python library..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        project-directory: tests/python-lib

    - shell: bash
      run: echo "🎭Testing 'inject' mode for 🎁unknown tech stack..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: inject
        artifact-descriptor: some-descriptor.txt
        project-directory: tests/unknown-tech

    - shell: bash
      run: echo "🎭Testing 'check' mode for 📦NodeJS package..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/npm-package

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🦀Rust crate..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/rust-crate

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🦀Rust 🌐WebAssembly..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/rust-wasm

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🪶Maven project..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/maven-project

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🐘Gradle project..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/gradle-project

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🐍Python library..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        project-directory: tests/python-lib

    - shell: bash
      run: echo "🎭Testing 'check' mode for 🎁unknown tech stack..."

    - name: Check version for unknown tech
      uses: ./actions/enforce-branch-version
      with:
        mode: check
        artifact-descriptor: some-descriptor.txt
        project-directory: tests/unknown-tech

    - shell: bash
      run: echo "🎭Now testing the NodeJS package scenario, passing an explicit descriptor..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: check
        artifact-descriptor: package.json
        project-directory: tests/npm-package

    - uses: ./actions/detect-branch-version
      id: version-detector

    - shell: bash
      run: echo "🎭Verifying that the version has been injected multiple times..."

    - shell: bash
      working-directory: tests/unknown-tech
      run: |
        version="${{ steps.version-detector.outputs.version }}"

        if grep "A: v$version" some-descriptor.txt && grep "B: '$version'" some-descriptor.txt
        then
          echo "✅The version was injected multiple times into the 🎁unknown tech descriptor!"
        else
          echo "❌The version was not injected multiple times into the 🎁unknown tech descriptor!" >&2
          exit 1
        fi

name: Test enforce-branch-version

runs:
  using: composite
  steps:
    - uses: ./actions/detect-branch-version
      id: version-detector

    - shell: bash
      run: echo "🎭Testing 'skip' mode..."

    - uses: ./actions/enforce-branch-version
      with:
        mode: skip
        project-directory: tests/rust-crate

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 📦NodeJS package
        project-directory: tests/npm-package
        artifact-descriptor: package.json
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🦀Rust crate
        project-directory: tests/rust-crate
        artifact-descriptor: Cargo.toml
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🦀Rust 🌐WebAssembly
        project-directory: tests/rust-wasm
        artifact-descriptor: Cargo.toml
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🪶Maven project
        project-directory: tests/maven-project
        artifact-descriptor: pom.xml
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🐘Gradle project
        project-directory: tests/gradle-project
        artifact-descriptor: build.gradle.kts
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🐍Python library
        project-directory: tests/gradle-project
        artifact-descriptor: build.gradle.kts
        expected-version: ${{ steps.version-detector.outputs.version }}

    - uses: ./.github/test-actions/test-enforce-branch-version/scenario
      with:
        description: 🎁unknown tech stack
        project-directory: tests/unknown-tech
        artifact-descriptor: some-descriptor.txt
        expected-version: ${{ steps.version-detector.outputs.version }}
        can-infer-descriptor: false

    - shell: bash
      run: echo "🎭Verifying that the version has been injected multiple times..."

    - shell: bash
      working-directory: tests/unknown-tech
      run: |
        version="${{ steps.version-detector.outputs.version }}"

        if grep "A: v$version" some-descriptor.txt && grep "B: '$version'" some-descriptor.txt
        then
          echo "✅The version was injected multiple times into the 🎁unknown tech descriptor!"
        else
          echo "❌The version was not injected multiple times into the 🎁unknown tech descriptor!" >&2
          exit 1
        fi
